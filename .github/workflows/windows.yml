name: windows

on:
  workflow_dispatch:

jobs:
  windows_job:
    runs-on: windows-latest
    timeout-minutes: 10

    steps:
    - name: Download backup artifact if exists
      uses: actions/download-artifact@v4
      with:
        name: backup-data
        path: D:\a\macos\macos

    - name: üóÇÔ∏è Restore backup n·∫øu c√≥
      shell: pwsh
      run: |
        $zip = "D:\a\macos\macos\backup.zip"
        if (Test-Path $zip) {
          Expand-Archive -Path $zip -DestinationPath "C:\Users\runneradmin" -Force
          Write-Host "‚úÖ Restore completed."
        } else {
          Write-Host "‚ö†Ô∏è No backup to restore."
        }

    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip

    - name: Start ngrok background
      shell: pwsh
      run: Start-Process -NoNewWindow -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389"

    - name: üíæ Backup Desktop/Documents/Downloads
      shell: pwsh
      run: |
        $backupZip = "D:\a\macos\macos\backup.zip"
        $src = @(
          "C:\Users\runneradmin\Desktop",
          "C:\Users\runneradmin\Documents",
          "C:\Users\runneradmin\Downloads"
        ) | Where-Object { Test-Path $_ }

        if ($src.Count -gt 0) {
          Compress-Archive -Path $src -DestinationPath $backupZip -Force
          Write-Host "‚úÖ Backup created at $backupZip"
        } else {
          Write-Host "‚ö†Ô∏è No folders to backup."
        }

    - name: Upload backup
      uses: actions/upload-artifact@v4
      with:
        name: backup-data
        path: D:\a\macos\macos\backup.zip

    - name: Sleep 5 minutes (keep ngrok alive)
      shell: pwsh
      run: Start-Sleep -Seconds 300

    - name: Trigger reruner workflow
      shell: pwsh
      run: |
        $token = "${{ secrets.MY_PAT_TOKEN }}"
        $repo = "${{ github.repository }}"
        $body = '{"ref":"main"}'
        Invoke-RestMethod -Method POST -Uri "https://api.github.com/repos/$repo/actions/workflows/reruner.yml/dispatches" `
          -Headers @{ Authorization = "token $token" } `
          -Body $body -ContentType "application/json"
